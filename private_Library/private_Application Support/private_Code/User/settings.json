{
    // Python stuff
    "jupyter.askForKernelRestart": false,
    "jupyter.notebookFileRoot": "${workspaceFolder}",
    "jupyter.runStartupCommands": [
        "%load_ext autoreload", "%autoreload 2"
    ],
    // Cleaner view
    "breadcrumbs.enabled": false,
    "editor.minimap.enabled": false,
    "editor.lineNumbers": "relative",
    "workbench.activityBar.location": "hidden",
    "workbench.statusBar.visible": true,
    // UI things
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "github.copilot.nextEditSuggestions.enabled": true,
    "workbench.editor.empty.hint": "hidden",
    "security.workspace.trust.untrustedFiles": "open",
    "vim.normalModeKeyBindingsNonRecursive": [ 
        // We want to achieve similar behavior to commonly used lazyvim settings, to achieve a consistent behavior
        // See for example https://learn.omacom.io/2/the-omarchy-manual/56/neovim

        // splits
        { "before": ["leader", "w", "v"], "commands": [":vsplit"] },
        { "before": ["leader", "w", "s"], "commands": [":split"] },

        // pane navigation
        { "before": ["leader", "w", "h"], "commands": ["workbench.action.focusLeftGroup"] },
        { "before": ["leader", "w", "j"], "commands": ["workbench.action.focusBelowGroup"] },
        { "before": ["leader", "w", "k"], "commands": ["workbench.action.focusAboveGroup"] },
        { "before": ["leader", "w", "l"], "commands": ["workbench.action.focusRightGroup"] },
        // Remap <leader>ww to switch to the next pane
        { "before": ["<leader>", "w", "w"], "commands": ["workbench.action.focusNextGroup"] },
        // Remap <leader>qd to close the current pane
        { "before": ["<leader>", "w", "q"], "commands": [":close"] },
        // Remap <leader>qo to close all other panes except the current one
        { "before": ["<leader>", "w", "o"], "commands": [":only"] },

        // SEARCHING
        // Remap <leader>space space to fuzzy file finder
        // Note: this is the same as <leader>ff but shorter
        { "before": ["<leader>", " "], "commands": ["workbench.action.quickOpen"] },
        { "before": ["<leader>", "f", "f"], "commands": ["workbench.action.quickOpen"] },
        // Remap <leader>fg (find git) to search acrross files in the workspace using periscope
        // This will ignored files ignored by git (.gitignore-d)
        { "before": ["<leader>", "f", "g"], "commands": [{ "command": "periscope.searchFiles", "when": "editorTextFocus" }] },
        // Remap <leader>sg (search git) to search in files
        // This will ignored files ignored by git (.gitignore-d)
        { "before": ["<leader>", "s", "g"], "commands": ["periscope.searchFiles"] },
        // Remap <leader>sr to search and replace text across files
        { "before": ["<leader>", "s", "r"], "commands": ["workbench.action.replaceInFiles"] },

        // Remap n and N to keep the cursor in the middle when searching next/previous
        { "before": ["n"], "after": ["n", "z", "z", "z", "v"] },
        { "before": ["N"], "after": ["N", "z", "z", "z", "v"] },
       
        // FILE TREE AND BUFFERS (tabs) NAVIGATION
        // Remap <leader>e to Toggle the file tree on/off.
        { "before": ["<leader>", "e"], "commands": ["workbench.explorer.fileView.focus"], "when": "!explorerViewletFocus" },
        // Remap <leader>bd (buffer delete) to close the current tab
        { "before": ["<leader>", "b", "d"], "commands": ["workbench.action.closeActiveEditor"] },
        // Remap <leader>bo (buffer delete other buffers) to close all tabs except the current one
        { "before": ["<leader>", "b", "o"], "commands": ["workbench.action.closeOtherEditors"] },

        // CODING HELPERS
        // Remap <leader>i to open copilot chat
        { "before": ["<leader>", "i"], "commands": ["workbench.panel.chat.view.copilot.focus"] },
        // Remap <leader>t to toggle the terminal
        { "before": ["<leader>", "t"], "commands": ["workbench.action.terminal.toggleTerminal"] },
        
        // EDITOR
        // Remap Ctrl-d and Ctrl-U to move down/up half a page and then center the screen
        { "before": ["<C-d>"], "after": ["<C-d>", "z", "z"] },
        { "before": ["<C-u>"], "after": ["<C-u>", "z", "z"] },
        // Remap move 5 lines up/down with arrow keys
        { "before": ["<Down>"], "after": ["5", "j"] },
        { "before": ["<Up>"], "after": ["5", "k"] },

        // Remap Y to yank from the cursor to the end of the line
        { "before": ["Y"], "after": ["y", "$"] },
        // Remap <leader>qq to save and close the current (file) buffer. Equivalent to :wq in vim
        { "before": ["<leader>", "q", "q"], "commands": ["workbench.action.files.save", "workbench.action.closeActiveEditor"] },
        // Remap <leader>/ to toggle comment on the current line or selection
        { "before": ["<leader>", "/"], "commands": ["editor.action.commentLine"] },
        // Remap <leader>cf (code format) to format the current file using ruff
        { "before": ["<leader>", "c", "f"], "commands": ["ruff.executeFormat"] },
        { "before": ["<leader>", "c", "a"], "commands": ["editor.action.quickFix"] },
        // Remap <leader>gh (goto hover) to show a preview of the definition of the symbol under the cursor 
        { "before": ["g", "h"], "commands": ["editor.action.showDefinitionPreviewHover"] }
    ],
    "vim.visualModeKeyBindings": [
        // stay in visual mode while indenting
        { "before": [">"], "commands": ["editor.action.indentLines"] },
        { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        // Remap J and K (capitals) in visual mode to move the selected lines down or up
        { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
        { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
        // Remap move 5 lines up/down with arrow keys
        { "before": ["<Down>"], "after": ["5", "j"] },
        { "before": ["<Up>"], "after": ["5", "k"] },
        // When we paste over a selection, keep the current clipboard content (don't override it with the replaced text)
        { "before": ["p"], "after": ["\"", "_", "d", "P"] },
        // Remap <leader>/ to toggle comment on the current line or selection (also in visual mode)
        { "before": ["<leader>", "/"], "commands": ["editor.action.commentLine"] },
    ],
    "vim.handleKeys": {
        "<C-p>": false,
        "<C-i>": false,
        "<C-f>": false,
        "<C-w>": false
    },
    "vim.useSystemClipboard": true,
    "vim.leader": "<Space>",
    // Enable smart indentation (equivalent to vim.opt.smartindent = true)
    "editor.autoIndent": "full",
    "redhat.telemetry.enabled": false,
    // Global setting to enable auto-closing for all languages
    "editor.autoClosingQuotes": "always",
    "workbench.colorTheme": "Catppuccin Mocha",
    // Faster VIM plugin
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    }
}