// Place your key bindings in this file to override the defaults
[
    {
        "key": "shift+enter",
        "command": "jupyter.execSelectionInteractive",
        "when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.execSelectionInteractive",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !isCompositeNotebook && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    // ESC closes the sidebar 
    // and moves focus back to the active editor group
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "(explorerViewletVisible || searchViewletVisible || extensionViewletVisible || debugViewletVisible || scmViewletVisible) && !inVimMode"
    },
    {
        "key": "escape",
        "command": "workbench.action.closeSidebar",
        "when": "(explorerViewletVisible || searchViewletVisible || extensionViewletVisible || debugViewletVisible || scmViewletVisible) && !inVimMode"
    },
    // ESC to also Close the secondary sidebar (e.g., Copilot chat, Terminal, etc.)
    {
        "key": "escape",
        "command": "workbench.action.closeAuxiliaryBar",
        "when": "auxiliaryBarFocus"
    },
    // ESC also closes the terminal if it's focused
      // And it moves focus back to the editor
    {
      "key": "escape",
      "command": "workbench.action.terminal.toggleTerminal",
      "when": "terminalFocus"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    // Show vim command bar with running vim commands with :
    {
      "key": "shift+;",
      "command": "vim.showQuickpickCmdLine",
      "when": "editorTextFocus && vim.mode != 'Insert'"
    },
    // Navigate tabs using Shift+h and Shift+l
    // Works in both notebooks and regular text editors
    {
        "key": "shift+h",
        "command": "workbench.action.previousEditor",
        "when": "notebookEditorFocused && vim.mode != 'Insert'"
    },
    {
        "key": "shift+l", 
        "command": "workbench.action.nextEditor",
        "when": "notebookEditorFocused && vim.mode != 'Insert'"
    },
    {
        "key": "shift+h",
        "command": "workbench.action.previousEditor",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "shift+l", 
        "command": "workbench.action.nextEditor",
        "when": "editorTextFocus && vim.mode == 'Normal'"
    },// Map CTRL + / to toggle Terminal. 
    // Rule 1: From the editor, show and focus the terminal
    {
        "key": "ctrl+/",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    // Map CTRL + / to toggle Terminal. 
    // Rule 2: From the terminal, close the terminal and focus the editor
    {
        "key": "ctrl+/",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.accessibleViewAcceptInlineCompletion",
        "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
    },
    // Open file tree when all tabs are closed
    // {
    //   "key": "e",
    //   "command": "workbench.explorer.fileView.focus",
    //   "when": "!editorTextFocus && !explorerViewletVisible && !sideBarFocus && !terminalFocus && !auxiliaryBarFocus && !inVimMode"
    // },
    // FILE TREE
    // New file, use trailing / in filename to create a new folder
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.paste", 
    "key": "p",
    "when": "filesExplorerFocus && !inputFocus"
  },
{
    "command": "workbench.action.closeSidebar", 
    "key": "q",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "before": ["g", "g"],
    "commands": ["list.focusFirst"],
    "when": "filesExplorerFocus"
    },
    // enter to open file
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // o to quickly preview a file, without moving focus 
    {
    "key": "o",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "filesExplorerFocus && !inputFocus"
  }
]